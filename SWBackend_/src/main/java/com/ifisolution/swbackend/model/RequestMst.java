package com.ifisolution.swbackend.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * RequestMst generated by hbm2java
 */
@Entity
@Table(name = "request_mst", catalog = "swbackend")
public class RequestMst implements java.io.Serializable {

	private Integer requestId;
	private UserMst userMst;
	private String companyName;
	private String companyAddr;
	private String companyTax;
	private String requestTitle;
	private String companyLicence;
	private String companyEmail;
	private Date createTime;
	private Date updateTime;
	private String status;
	private String personCharge;
	private String lawyerCharge;
	private String description;
	private Set<NotificationMst> notificationMsts = new HashSet<NotificationMst>(0);
	private Set<QuestionMst> questionMsts = new HashSet<QuestionMst>(0);
	private Set<DocumentMst> documentMsts = new HashSet<DocumentMst>(0);

	public RequestMst() {
	}

	public RequestMst(UserMst userMst, String companyName, String companyAddr, String companyTax, String requestTitle,
			String companyLicence, String companyEmail, Date createTime, Date updateTime, String status,
			String personCharge, String lawyerCharge, String description, Set<NotificationMst> notificationMsts,
			Set<QuestionMst> questionMsts, Set<DocumentMst> documentMsts) {
		this.userMst = userMst;
		this.companyName = companyName;
		this.companyAddr = companyAddr;
		this.companyTax = companyTax;
		this.requestTitle = requestTitle;
		this.companyLicence = companyLicence;
		this.companyEmail = companyEmail;
		this.createTime = createTime;
		this.updateTime = updateTime;
		this.status = status;
		this.personCharge = personCharge;
		this.lawyerCharge = lawyerCharge;
		this.description = description;
		this.notificationMsts = notificationMsts;
		this.questionMsts = questionMsts;
		this.documentMsts = documentMsts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "request_id", unique = true, nullable = false)
	public Integer getRequestId() {
		return this.requestId;
	}

	public void setRequestId(Integer requestId) {
		this.requestId = requestId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_Id")
	@JsonIgnore
	public UserMst getUserMst() {
		return this.userMst;
	}

	public void setUserMst(UserMst userMst) {
		this.userMst = userMst;
	}

	@Column(name = "company_name", length = 45)
	public String getCompanyName() {
		return this.companyName;
	}

	public void setCompanyName(String companyName) {
		this.companyName = companyName;
	}

	@Column(name = "company_addr", length = 45)
	public String getCompanyAddr() {
		return this.companyAddr;
	}

	public void setCompanyAddr(String companyAddr) {
		this.companyAddr = companyAddr;
	}

	@Column(name = "company_tax", length = 45)
	public String getCompanyTax() {
		return this.companyTax;
	}

	public void setCompanyTax(String companyTax) {
		this.companyTax = companyTax;
	}

	@Column(name = "request_title", length = 45)
	public String getRequestTitle() {
		return this.requestTitle;
	}

	public void setRequestTitle(String requestTitle) {
		this.requestTitle = requestTitle;
	}

	@Column(name = "company_licence", length = 45)
	public String getCompanyLicence() {
		return this.companyLicence;
	}

	public void setCompanyLicence(String companyLicence) {
		this.companyLicence = companyLicence;
	}

	@Column(name = "company_email", length = 45)
	public String getCompanyEmail() {
		return this.companyEmail;
	}

	public void setCompanyEmail(String companyEmail) {
		this.companyEmail = companyEmail;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "create_time", length = 10)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "update_time", length = 10)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "person_charge", length = 45)
	public String getPersonCharge() {
		return this.personCharge;
	}

	public void setPersonCharge(String personCharge) {
		this.personCharge = personCharge;
	}

	@Column(name = "lawyer_charge", length = 45)
	public String getLawyerCharge() {
		return this.lawyerCharge;
	}

	public void setLawyerCharge(String lawyerCharge) {
		this.lawyerCharge = lawyerCharge;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "requestMst")
	@JsonIgnore
	public Set<NotificationMst> getNotificationMsts() {
		return this.notificationMsts;
	}

	public void setNotificationMsts(Set<NotificationMst> notificationMsts) {
		this.notificationMsts = notificationMsts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "request_question_mst", catalog = "swbackend", joinColumns = {
			@JoinColumn(name = "request_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "question_id", nullable = false, updatable = false) })
//	@JsonIgnore
	public Set<QuestionMst> getQuestionMsts() {
		return this.questionMsts;
	}

	public void setQuestionMsts(Set<QuestionMst> questionMsts) {
		this.questionMsts = questionMsts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "request_document_mst", catalog = "swbackend", joinColumns = {
			@JoinColumn(name = "request_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "document_id", nullable = false, updatable = false) })
//	@JsonIgnore
	public Set<DocumentMst> getDocumentMsts() {
		return this.documentMsts;
	}

	public void setDocumentMsts(Set<DocumentMst> documentMsts) {
		this.documentMsts = documentMsts;
	}

}
